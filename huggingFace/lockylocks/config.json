{"policy_class": {":type:": "<class 'abc.ABCMeta'>", ":serialized:": "gAWVMQAAAAAAAACMGHNiM19jb250cmliLnRxYy5wb2xpY2llc5SMEE11bHRpSW5wdXRQb2xpY3mUk5Qu", "__module__": "sb3_contrib.tqc.policies", "__doc__": "\n    Policy class (with both actor and critic) for TQC.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param use_sde: Whether to use State Dependent Exploration or not\n    :param log_std_init: Initial value for the log standard deviation\n    :param use_expln: Use ``expln()`` function instead of ``exp()`` when using gSDE to ensure\n        a positive standard deviation (cf paper). It allows to keep variance\n        above zero and prevent it from growing too fast. In practice, ``exp()`` is usually enough.\n    :param clip_mean: Clip the mean output when using gSDE to avoid numerical instability.\n    :param features_extractor_class: Features extractor to use.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    :param n_quantiles: Number of quantiles for the critic.\n    :param n_critics: Number of critic networks to create.\n    :param share_features_extractor: Whether to share or not the features extractor\n        between the actor and the critic (this saves computation time)\n    ", "__init__": "<function MultiInputPolicy.__init__ at 0x7f75db5b6830>", "__abstractmethods__": "frozenset()", "_abc_impl": "<_abc._abc_data object at 0x7f75db5ba2c0>"}, "verbose": 1, "policy_kwargs": {"net_arch": [512, 512, 512], "use_sde": false}, "num_timesteps": 1200000, "_total_timesteps": 1200000.0, "_num_timesteps_at_start": 0, "seed": null, "action_noise": null, "start_time": 1707721331999432319, "learning_rate": 0.001, "tensorboard_log": null, "_last_obs": null, "_last_episode_starts": {":type:": "<class 'numpy.ndarray'>", ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAAGUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="}, "_last_original_obs": {":type:": "<class 'collections.OrderedDict'>", ":serialized:": "gAWVXwEAAAAAAACMC2NvbGxlY3Rpb25zlIwLT3JkZXJlZERpY3SUk5QpUpQojA1hY2hpZXZlZF9nb2FslIwSbnVtcHkuY29yZS5udW1lcmljlIwLX2Zyb21idWZmZXKUk5QolgwAAAAAAAAAH5oXPlqPED6GwaM8lIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYksBSwOGlIwBQ5R0lFKUjAxkZXNpcmVkX2dvYWyUaAcolgwAAAAAAAAA1BlWve2qAz7SSOU9lGgOSwFLA4aUaBJ0lFKUjAtvYnNlcnZhdGlvbpRoByiWTAAAAAAAAAAjYQE+JGwJPuPidj2Ei4u+Mab+PWLtwr/czaM9H5oXPlqPED6GwaM8IGkZsnSaWre/GWC3U0A+N/MEwLLeCD43CsyUNXyiFDq6KdmxlGgOSwFLE4aUaBJ0lFKUdS4=", "achieved_goal": "[[0.14804886 0.14117184 0.01998974]]", "desired_goal": "[[-0.05227073  0.12858172  0.1119553 ]]", "observation": "[[ 1.2634711e-01  1.3420159e-01  6.0274970e-02 -2.7254879e-01\n   1.2434042e-01 -1.5228693e+00  7.9982489e-02  1.4804886e-01\n   1.4117184e-01  1.9989740e-02 -8.9296748e-09 -1.3029774e-05\n  -1.3357435e-05  1.1339859e-05 -2.2353992e-08  1.1326947e-05\n   1.1086242e-06  5.6699640e-04 -6.3202750e-09]]"}, "_episode_num": 72073, "use_sde": false, "sde_sample_freq": -1, "_current_progress_remaining": 0.0, "_stats_window_size": 100, "ep_info_buffer": {":type:": "<class 'collections.deque'>", ":serialized:": "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"}, "ep_success_buffer": {":type:": "<class 'collections.deque'>", ":serialized:": "gAWVhgAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKUKIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiJiIiIiIiIiIiIiIiIiIiIiIhlLg=="}, "_n_updates": 1199900, "observation_space": {":type:": "<class 'gymnasium.spaces.dict.Dict'>", ":serialized:": "gAWVMgQAAAAAAACMFWd5bW5hc2l1bS5zcGFjZXMuZGljdJSMBERpY3SUk5QpgZR9lCiMBnNwYWNlc5SMC2NvbGxlY3Rpb25zlIwLT3JkZXJlZERpY3SUk5QpUpQojA1hY2hpZXZlZF9nb2FslIwUZ3ltbmFzaXVtLnNwYWNlcy5ib3iUjANCb3iUk5QpgZR9lCiMBWR0eXBllIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYowNYm91bmRlZF9iZWxvd5SMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYDAAAAAAAAAAEBAZRoE4wCYjGUiYiHlFKUKEsDjAF8lE5OTkr/////Sv////9LAHSUYksDhZSMAUOUdJRSlIwNYm91bmRlZF9hYm92ZZRoHCiWAwAAAAAAAAABAQGUaCBLA4WUaCR0lFKUjAZfc2hhcGWUSwOFlIwDbG93lGgcKJYMAAAAAAAAAAAAIMEAACDBAAAgwZRoFksDhZRoJHSUUpSMBGhpZ2iUaBwolgwAAAAAAAAAAAAgQQAAIEEAACBBlGgWSwOFlGgkdJRSlIwIbG93X3JlcHKUjAUtMTAuMJSMCWhpZ2hfcmVwcpSMBDEwLjCUjApfbnBfcmFuZG9tlE51YowMZGVzaXJlZF9nb2FslGgNKYGUfZQoaBBoFmgZaBwolgMAAAAAAAAAAQEBlGggSwOFlGgkdJRSlGgnaBwolgMAAAAAAAAAAQEBlGggSwOFlGgkdJRSlGgsSwOFlGguaBwolgwAAAAAAAAAAAAgwQAAIMEAACDBlGgWSwOFlGgkdJRSlGgzaBwolgwAAAAAAAAAAAAgQQAAIEEAACBBlGgWSwOFlGgkdJRSlGg4jAUtMTAuMJRoOowEMTAuMJRoPE51YowLb2JzZXJ2YXRpb26UaA0pgZR9lChoEGgWaBloHCiWEwAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBlGggSxOFlGgkdJRSlGgnaBwolhMAAAAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAZRoIEsThZRoJHSUUpRoLEsThZRoLmgcKJZMAAAAAAAAAAAAIMEAACDBAAAgwQAAIMEAACDBAAAgwQAAIMEAACDBAAAgwQAAIMEAACDBAAAgwQAAIMEAACDBAAAgwQAAIMEAACDBAAAgwQAAIMGUaBZLE4WUaCR0lFKUaDNoHCiWTAAAAAAAAAAAACBBAAAgQQAAIEEAACBBAAAgQQAAIEEAACBBAAAgQQAAIEEAACBBAAAgQQAAIEEAACBBAAAgQQAAIEEAACBBAAAgQQAAIEEAACBBlGgWSxOFlGgkdJRSlGg4jAUtMTAuMJRoOowEMTAuMJRoPE51YnVoLE5oEE5oPE51Yi4=", "spaces": "OrderedDict([('achieved_goal', Box(-10.0, 10.0, (3,), float32)), ('desired_goal', Box(-10.0, 10.0, (3,), float32)), ('observation', Box(-10.0, 10.0, (19,), float32))])", "_shape": null, "dtype": null, "_np_random": null}, "action_space": {":type:": "<class 'gymnasium.spaces.box.Box'>", ":serialized:": "gAWVbAIAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMDWJvdW5kZWRfYmVsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWBAAAAAAAAAABAQEBlGgIjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwSFlIwBQ5R0lFKUjA1ib3VuZGVkX2Fib3ZllGgRKJYEAAAAAAAAAAEBAQGUaBVLBIWUaBl0lFKUjAZfc2hhcGWUSwSFlIwDbG93lGgRKJYQAAAAAAAAAAAAgL8AAIC/AACAvwAAgL+UaAtLBIWUaBl0lFKUjARoaWdolGgRKJYQAAAAAAAAAAAAgD8AAIA/AACAPwAAgD+UaAtLBIWUaBl0lFKUjAhsb3dfcmVwcpSMBC0xLjCUjAloaWdoX3JlcHKUjAMxLjCUjApfbnBfcmFuZG9tlIwUbnVtcHkucmFuZG9tLl9waWNrbGWUjBBfX2dlbmVyYXRvcl9jdG9ylJOUjAVQQ0c2NJRoMowUX19iaXRfZ2VuZXJhdG9yX2N0b3KUk5SGlFKUfZQojA1iaXRfZ2VuZXJhdG9ylIwFUENHNjSUjAVzdGF0ZZR9lChoPYoR5P9Wfhgga1OyWBlGzsHPlgCMA2luY5SKEblsm+VH0aIg5IC6VKC/5uUAdYwKaGFzX3VpbnQzMpRLAIwIdWludGVnZXKUSwB1YnViLg==", "dtype": "float32", "bounded_below": "[ True  True  True  True]", "bounded_above": "[ True  True  True  True]", "_shape": [4], "low": "[-1. -1. -1. -1.]", "high": "[1. 1. 1. 1.]", "low_repr": "-1.0", "high_repr": "1.0", "_np_random": "Generator(PCG64)"}, "n_envs": 1, "buffer_size": 1000000, "batch_size": 2048, "learning_starts": 100, "tau": 0.05, "gamma": 0.95, "gradient_steps": 1, "optimize_memory_usage": false, "replay_buffer_class": {":type:": "<class 'abc.ABCMeta'>", ":serialized:": "gAWVPwAAAAAAAACMJ3N0YWJsZV9iYXNlbGluZXMzLmhlci5oZXJfcmVwbGF5X2J1ZmZlcpSMD0hlclJlcGxheUJ1ZmZlcpSTlC4=", "__module__": "stable_baselines3.her.her_replay_buffer", "__annotations__": "{'env': typing.Optional[stable_baselines3.common.vec_env.base_vec_env.VecEnv]}", "__doc__": "\n    Hindsight Experience Replay (HER) buffer.\n    Paper: https://arxiv.org/abs/1707.01495\n\n    Replay buffer for sampling HER (Hindsight Experience Replay) transitions.\n\n    .. note::\n\n      Compared to other implementations, the ``future`` goal sampling strategy is inclusive:\n      the current transition can be used when re-sampling.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param env: The training environment\n    :param device: PyTorch device\n    :param n_envs: Number of parallel environments\n    :param optimize_memory_usage: Enable a memory efficient variant\n        Disabled for now (see https://github.com/DLR-RM/stable-baselines3/pull/243#discussion_r531535702)\n    :param handle_timeout_termination: Handle timeout termination (due to timelimit)\n        separately and treat the task as infinite horizon task.\n        https://github.com/DLR-RM/stable-baselines3/issues/284\n    :param n_sampled_goal: Number of virtual transitions to create per real transition,\n        by sampling new goals.\n    :param goal_selection_strategy: Strategy for sampling goals for replay.\n        One of ['episode', 'final', 'future']\n    :param copy_info_dict: Whether to copy the info dictionary and pass it to\n        ``compute_reward()`` method.\n        Please note that the copy may cause a slowdown.\n        False by default.\n    ", "__init__": "<function HerReplayBuffer.__init__ at 0x7f75dba7ce50>", "__getstate__": "<function HerReplayBuffer.__getstate__ at 0x7f75dba7cee0>", "__setstate__": "<function HerReplayBuffer.__setstate__ at 0x7f75dba7cf70>", "set_env": "<function HerReplayBuffer.set_env at 0x7f75dba7d000>", "add": "<function HerReplayBuffer.add at 0x7f75dba7d090>", "_compute_episode_length": "<function HerReplayBuffer._compute_episode_length at 0x7f75dba7d120>", "sample": "<function HerReplayBuffer.sample at 0x7f75dba7d1b0>", "_get_real_samples": "<function HerReplayBuffer._get_real_samples at 0x7f75dba7d240>", "_get_virtual_samples": "<function HerReplayBuffer._get_virtual_samples at 0x7f75dba7d2d0>", "_sample_goals": "<function HerReplayBuffer._sample_goals at 0x7f75dba7d360>", "truncate_last_trajectory": "<function HerReplayBuffer.truncate_last_trajectory at 0x7f75dba7d3f0>", "__abstractmethods__": "frozenset()", "_abc_impl": "<_abc._abc_data object at 0x7f75dba88640>"}, "replay_buffer_kwargs": {"n_sampled_goal": 4, "goal_selection_strategy": "future"}, "train_freq": {":type:": "<class 'stable_baselines3.common.type_aliases.TrainFreq'>", ":serialized:": "gAWVYQAAAAAAAACMJXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi50eXBlX2FsaWFzZXOUjAlUcmFpbkZyZXGUk5RLAWgAjBJUcmFpbkZyZXF1ZW5jeVVuaXSUk5SMBHN0ZXCUhZRSlIaUgZQu"}, "use_sde_at_warmup": false, "target_entropy": -4.0, "ent_coef": "auto", "target_update_interval": 1, "top_quantiles_to_drop_per_net": 2, "lr_schedule": {":type:": "<class 'function'>", ":serialized:": "gAWV0gIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLAUsTQwSIAFMAlE6FlCmMAV+UhZSMXi9ob21lL2pvaG4vbWluaWNvbmRhMy9lbnZzL3Rlc3QvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUjARmdW5jlEuDQwIEAZSMA3ZhbJSFlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UjF4vaG9tZS9qb2huL21pbmljb25kYTMvZW52cy90ZXN0L2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lHVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUhZR0lFKUaACMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGgffZR9lChoFmgNjAxfX3F1YWxuYW1lX1+UjBljb25zdGFudF9mbi48bG9jYWxzPi5mdW5jlIwPX19hbm5vdGF0aW9uc19flH2UjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoF4wHX19kb2NfX5ROjAtfX2Nsb3N1cmVfX5RoAIwKX21ha2VfY2VsbJSTlEc/UGJN0vGp/IWUUpSFlIwXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg=="}, "batch_norm_stats": [], "batch_norm_stats_target": [], "system_info": {"OS": "Linux-6.5.0-17-generic-x86_64-with-glibc2.35 # 17~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue Jan 16 14:32:32 UTC 2", "Python": "3.10.13", "Stable-Baselines3": "2.2.1", "PyTorch": "2.2.0+cu121", "GPU Enabled": "True", "Numpy": "1.26.4", "Cloudpickle": "3.0.0", "Gymnasium": "0.29.1"}}